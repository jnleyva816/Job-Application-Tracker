services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: job-tracker-db
    environment:
      POSTGRES_DB: jobtracker
      POSTGRES_USER: jobtracker
      POSTGRES_PASSWORD: jobtracker
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - job-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobtracker"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: job-tracker-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/jobtracker
      SPRING_DATASOURCE_USERNAME: jobtracker
      SPRING_DATASOURCE_PASSWORD: jobtracker
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "0.0.0.0:8080:8080"
    networks:
      - job-tracker-network
    volumes:
      - ./backend/logs:/app/logs

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: job-tracker-frontend
    depends_on:
      - backend
    ports:
      - "0.0.0.0:3000:80"
    networks:
      - job-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  job-tracker-network:
    driver: bridge 